#include <assert.h>
#include <stdio.h>
#include "data.h"
#include "checksum.h"

Bitboard BitMask[90];
Bitboard KnightLegs[90];
Bitboard KnightLegsEx[90];

int      RankBase[9] = { 0, 10, 20, 30, 40, 50, 60, 70, 80};

int HorseMove[8][2] = {{-1,2},{1,2},{-1,-2},{1,-2},{-2,1},{-2,-1},{2,1},{2,-1}};
int HorseLegs[8][2] = {{ 0,1},{0,1},{ 0,-1},{0,-1},{-1,0},{-1, 0},{1,0},{1, 0}};
int HorseEyes[8][2] = {{-1,1},{1,1},{-1,-1},{1,-1},{-1,1},{-1,-1},{1,1},{1,-1}};

// 列坐标
const int SqToFile[90] = {
	0,  1,  2,  3,  4,  5,  6,  7,  8,  9,
	0,  1,  2,  3,  4,  5,  6,  7,  8,  9,
	0,  1,  2,  3,  4,  5,  6,  7,  8,  9,
	0,  1,  2,  3,  4,  5,  6,  7,  8,  9,
	0,  1,  2,  3,  4,  5,  6,  7,  8,  9,
	0,  1,  2,  3,  4,  5,  6,  7,  8,  9,
	0,  1,  2,  3,  4,  5,  6,  7,  8,  9,
	0,  1,  2,  3,  4,  5,  6,  7,  8,  9,
	0,  1,  2,  3,  4,  5,  6,  7,  8,  9
};

// 行坐标
const int SqToRank[90] = {
	0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
	2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
	3,  3,  3,  3,  3,  3,  3,  3,  3,  3,
	4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
	5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
	6,  6,  6,  6,  6,  6,  6,  6,  6,  6,
	7,  7,  7,  7,  7,  7,  7,  7,  7,  7,
	8,  8,  8,  8,  8,  8,  8,  8,  8,  8
};

const int SqToFileEx[90] = {
   0,1,2,3,4,5,6,7,8,
   0,1,2,3,4,5,6,7,8,
   0,1,2,3,4,5,6,7,8,
   0,1,2,3,4,5,6,7,8,
   0,1,2,3,4,5,6,7,8,
   0,1,2,3,4,5,6,7,8,
   0,1,2,3,4,5,6,7,8,
   0,1,2,3,4,5,6,7,8,
   0,1,2,3,4,5,6,7,8,
   0,1,2,3,4,5,6,7,8,
 };

const int SqToRankEx[90]={
0,0,0,0,0,0,0,0,0,
1,1,1,1,1,1,1,1,1,
2,2,2,2,2,2,2,2,2,
3,3,3,3,3,3,3,3,3,
4,4,4,4,4,4,4,4,4,
5,5,5,5,5,5,5,5,5,
6,6,6,6,6,6,6,6,6,
7,7,7,7,7,7,7,7,7,
8,8,8,8,8,8,8,8,8,
9,9,9,9,9,9,9,9,9
};

extern void init()
{
	for(int i=0; i<90; i++)
		BitMask[i] = Bitboard(1, 0, 0) << i;

	int HorseLegsStep[4][2] = {{ 0,1},{0,-1},{ -1,0},{1,0}};

	//按列排列
	for(int i=0; i<90; ++i)
	{
		KnightLegs[i] = Bitboard(0,0,0);	

		for(int j = 0; j< 4; ++j)
		{
             int f = SqToFile[i] + HorseLegsStep[j][0];//列
			 int r = SqToRank[i] + HorseLegsStep[j][1];//行

			 if(INBOARD(f,r))
			 {
				 KnightLegs[i] |= BIT(SQ(r,f));
			 }
		}
	}

	for(int sq = 0; sq < 90; ++sq)
	{
        KnightLegsEx[sq] = Bitboard(0,0,0);
		for (int d = 0; d < 4; ++d)
		{
			  int r = SqToRankEx[sq] + HorseLegsStep[d][1];//行
              int f = SqToFileEx[sq] + HorseLegsStep[d][0];//列
			  if((r>= 0&& r<=9) && f>=0 && f<=8)
			  {
				  KnightLegsEx[sq] |=BIT((r*9+f)) ;
			  }
		}
	}
}